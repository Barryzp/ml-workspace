
# 这是专门用于验证函数的优化效果的

record_id : "fun2" # -fiter_bigsize
remark : "ppso1 4 s2"
data_save_path : "D:/workspace/ml-workspace/registration/result/optim"
mode : "test"

show_log : True

# 测试类型：cec2013;normal
test_type : "cec2013"

# 测试函数
fun_id : 1
# 测试函数集
fun_ids : [2, 3, 7, 8, 9] #["rotated_weierstrass", "weierstrass"]
# 测试函数配置
fun_configs : {
  griewank : {
      min_bound: -600, max_bound: 600, best_fit: 0.0
      },
  sphere : {
      min_bound: -100, max_bound: 100, best_fit: 0.0
      },
  weierstrass : {
      min_bound: -100, max_bound: 100, best_fit: 0.0
      },
  rotated_weierstrass : {
      min_bound: -100, max_bound: 100, best_fit: 0.0
      },
  cec2013 : {
    1 : {min_bound: -100, max_bound: 100, best_fit: -1400.0},
    2 : {min_bound: -100, max_bound: 100, best_fit: -1300.0},
    3 : {min_bound: -100, max_bound: 100, best_fit: -1200.0},
    4 : {min_bound: -100, max_bound: 100, best_fit: -1100.0},
    5 : {min_bound: -100, max_bound: 100, best_fit: -1000.0},
    6 : {min_bound: -100, max_bound: 100, best_fit: -900.0},
    7 : {min_bound: -100, max_bound: 100, best_fit: -800.0},
    8 : {min_bound: -100, max_bound: 100, best_fit: -700.0},
    9 : {min_bound: -100, max_bound: 100, best_fit: -600.0},
    10 : {min_bound: -100, max_bound: 100, best_fit: -500.0},
    11 : {min_bound: -100, max_bound: 100, best_fit: -400.0},
    12 : {min_bound: -100, max_bound: 100, best_fit: -300.0},
    13 : {min_bound: -100, max_bound: 100, best_fit: -200.0},
    14 : {min_bound: -100, max_bound: 100, best_fit: -100.0},
    15 : {min_bound: -100, max_bound: 100, best_fit: 100.0},
    16 : {min_bound: -100, max_bound: 100, best_fit: 200.0},
    17 : {min_bound: -100, max_bound: 100, best_fit: 300.0},
    18 : {min_bound: -100, max_bound: 100, best_fit: 400.0},
    19 : {min_bound: -100, max_bound: 100, best_fit: 500.0},
    20 : {min_bound: -100, max_bound: 100, best_fit: 600.0},
    21 : {min_bound: -100, max_bound: 100, best_fit: 700.0},
    22 : {min_bound: -100, max_bound: 100, best_fit: 800.0},
    23 : {min_bound: -100, max_bound: 100, best_fit: 900.0},
    24 : {min_bound: -100, max_bound: 100, best_fit: 1000.0},
    25 : {min_bound: -100, max_bound: 100, best_fit: 1100.0},
    26 : {min_bound: -100, max_bound: 100, best_fit: 1200.0},
    27 : {min_bound: -100, max_bound: 100, best_fit: 1300.0},
    28 : {min_bound: -100, max_bound: 100, best_fit: 1400.0},
  }
  }


# 独立运行次数
run_times : 30
# 迭代次数
iteratons : 4687
# 随机种子
rand_seed : 45
# 解的维度
solution_dimension : 30
# 最大FEs评估次数
max_fes : 0
# 每隔100次评估保存一次当前最优值
# 注意：需要是偶数，考虑到CSO和PPSO这种要配对的算法
save_fes_interval : 100
# 最大化目标函数还是最小化
target_max : False

# 用来记录第几次覆盖
repeat_count : 1
# PSO 参数
# 粒子个数
particle_num : 64

# HACK 可以进行改进 惯性权重，范围在[0.4, 2]，为1回退到基本粒子群算法，值越大全局寻优能力强，局部寻优能力弱；反之值越小局部寻优能力强
weight_inertia : 0.5 #0.729  # Inertia weight
# 个体学习因子，朝着个体最佳方向
individual_w : 1.56    # Cognitive (particle's best) weight [0, 4]
# 群体学习因子，朝着全局最佳方向
global_w : 2 #2.78    # Social (swarm's best) weight [0, 4]
# 粒子速度的变化范围的比例，一般是粒子的取值范围的10%~20%
speed_param_ratio : 0.18 # 0.1 ~ 0.2


# CMA-ES 参数
# 初始多维高斯分布标准差
sigma0 : 45
# 种群数量
pop_size : 256
# 最大迭代数目
max_iter : 50

# ppso参数
layer_config : [4, 8, 20, 32]
phi : 0.008
#     if dimensions == 50:
#         phi = 0.04
#     elif dimensions == 30:
#         phi = 0.02
#     else:
#         phi = 0.008

# cso参数
cso_phi : 0.1

# 图像绘制标记
markers : ['o', 'v', '^', '<', '>', '1', '2', '3', '4', 
           's', 'p', '*', 'h', 'H', '+', 'x', 'D', 'd', '|', '_', ',', '.', ]
colors : ['blue', 'green', 'red', 'cyan', 'magenta', 'yellow', 'black', 'white',
          'gray', 'orange', 'pink', 'brown', 'purple', 'lime', 'olive', 'navy', 
          'teal', 'aqua', 'fuchsia', 'maroon', 'silver', 'gold']
